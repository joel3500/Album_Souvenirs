Objectif : Dockeriser le projet Album Souvenirs

ðŸ§± Composants Ã  crÃ©er :
Dockerfile â†’ construire lâ€™image Flask

requirements.txt â†’ liste des dÃ©pendances Python

docker-compose.yml â†’ (facultatif, utile si tu veux ajouter une base de donnÃ©es plus tard)

--------------------------------------------------------------------------------------------
Quand Docker lit le Dockerfile, 
la commande : COPY . . va copier tous ces fichiers et dossiers dans le conteneur, 
plus prÃ©cisÃ©ment dans le rÃ©pertoire /app, car juste avant tu as Ã©crit : WORKDIR /app
Donc Ã  la fin, l'image Docker aura cette structure :
/app/
â”œâ”€â”€ app.py
â”œâ”€â”€ requirements.txt
â”œâ”€â”€ templates/
â”œâ”€â”€ static/

Le premier . fait rÃ©fÃ©rence au dossier courant sur ta machine (le contexte de build).
Le deuxiÃ¨me . fait rÃ©fÃ©rence au rÃ©pertoire courant dans lâ€™image Docker, dÃ©fini par WORKDIR.

On peut aussi faire plus spÃ©cifiquement ( pour optimiser l'image Docker ): 
COPY requirements.txt .
COPY app.py .
COPY templates/ templates/
COPY static/ static/   TOUT CECI equivaut Ã¨a COPY . .

-------------------------------------------------------------------------------------------------
Attention : On ne veux pas tout copier (ex : fichiers temporaires, .env, .git, etc.) ? 
On crÃ©e un fichier .dockerignore :
__pycache__/
*.pyc
*.pyo
*.pyd
.env
*.db
.vscode/
.git/

----------------------------------------------------------------------------------------------
En rÃ©sumÃ© :

Ã‰lÃ©ment | RÃ´le
COPY . . | Copie tous les fichiers du projet dans lâ€™image Docker
Avant Ã§a : WORKDIR /app | DÃ©finit /app comme rÃ©pertoire de travail dans le conteneur
Fichier .dockerignore | Exclut les fichiers non dÃ©sirÃ©s

----------------------------------------------------------------------------------------------
Ã€ quoi sert docker-compose.yml ?
car câ€™est un outil qui facilite lâ€™orchestration de plusieurs conteneurs Docker dans un seul fichier. 
MÃªme pour un petit projet comme le tien, il peut :

- DÃ©finir plusieurs services : backend Flask, base de donnÃ©es PostgreSQL, Redis, etc.
- Configurer facilement les ports, volumes, variables dâ€™environnement, etc.
- Lancer toute l'application avec une seule commande : docker-compose up

Pour construire et lancer le projet : 
docker-compose up --build 
cette commande Cette commande : Construit lâ€™image Docker de ton application Flask (selon le Dockerfile).
    Lance trois conteneurs :
    Le service web pour ton application Flask.
    Le service db pour PostgreSQL.
    Le service redis pour Redis.
    Lie les ports appropriÃ©s (par exemple le port 5000 pour ton app, 5432 pour PostgreSQL et 6379 pour Redis).

Pour arreter l'application : 
docker-compose down

Pour lancer en arriÃ¨ere plan.
docker-compose up -d

--------------------------------------------------------------------------------------
Architecture initiale du Projet :
Album_Souvenirs/
â”œâ”€â”€ app.py
â”œâ”€â”€ utils.py
â”œâ”€â”€ requirements.txt
â”œâ”€â”€ Dockerfile
â”œâ”€â”€ docker-compose.yml
â”œâ”€â”€ .env
â”œâ”€â”€ .dockerignore
â”‚
â”œâ”€â”€ templates/
â”‚   â”œâ”€â”€ page1_upload.html        # (ta page 1 : vidÃ©o + formulaire â†’ POST vers /lancer_album)
â”‚   â””â”€â”€ page2_album.html         # (ta page 2 : titre, profil, audio, galerie responsive)
â”‚
â”œâ”€â”€ static/
â”‚   â”œâ”€â”€ audio_sounds/            # musiques jouÃ©es sur la page 2 (sÃ©lectionnÃ©es Ã  la page 1)
â”‚   â”‚   â”œâ”€â”€ Celine_Dion_-_Im_Alive.mp3
â”‚   â”‚   â”œâ”€â”€ Drake_-_Gods_Plan.mp3
â”‚   â”‚   â”œâ”€â”€ Garou_Celine_Dion_-_Sous_le_vent.mp3
â”‚   â”‚   â””â”€â”€ SINACH_-_Way_Maker.mp3
â”‚   â”‚
â”‚   â”œâ”€â”€ img/
â”‚   â”‚   â””â”€â”€ celebration_5.jpg    # image de fond (si utilisÃ©e)
â”‚   â”‚
â”‚   â”œâ”€â”€ uploads/                 # contiendra profil.jpg + album/ (extraction du zip)
â”‚   â”‚   â”œâ”€â”€ .gitkeep             # pour versionner le dossier vide
â”‚   â”‚   â””â”€â”€ album/               # ex: Appart_750/xxx.jpg (crÃ©Ã© au runtime)
â”‚   â”‚
â”‚   â””â”€â”€ videos/
â”‚       â””â”€â”€ descriptive.mp4      # vidÃ©o affichÃ©e Ã  gauche sur PC, sous le formulaire sur mobile
â”‚
â””â”€â”€ README.md                    # (optionnel mais recommandÃ©)

